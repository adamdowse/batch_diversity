built model with input shape = (28, 28, 1, 1)
Model: "sequential"
_________________________________________________________________
 Layer (type)                Output Shape              Param #
=================================================================
 conv2d (Conv2D)             (None, 26, 26, 32)        320
 max_pooling2d (MaxPooling2D  (None, 13, 13, 32)       0
 )
 flatten (Flatten)           (None, 5408)              0
 dense (Dense)               (None, 100)               540900
 dense_1 (Dense)             (None, 10)                1010
=================================================================
Total params: 542,230
Trainable params: 542,230
Non-trainable params: 0
_________________________________________________________________
There are  188  batches in the warm start
Started Training
Traceback (most recent call last):
  File "Main.py", line 77, in <module>
    train_step(X,Y)
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/util/traceback_utils.py", line 153, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "/tmp/__autograph_generated_file9ftorokm.py", line 11, in tf__train_step
    preds = ag__.converted_call(ag__.ld(model), (ag__.ld(imgs),), dict(training=True), fscope)
  File "/usr/local/lib/python3.8/dist-packages/keras/utils/traceback_utils.py", line 67, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "/usr/local/lib/python3.8/dist-packages/keras/engine/input_spec.py", line 200, in assert_input_compatibility
    raise ValueError(f'Layer "{layer_name}" expects {len(input_spec)} input(s),'
ValueError: in user code:
    File "Main.py", line 8, in train_step  *
        preds = model(imgs,training=True)
    File "/usr/local/lib/python3.8/dist-packages/keras/utils/traceback_utils.py", line 67, in error_handler  **
        raise e.with_traceback(filtered_tb) from None
    File "/usr/local/lib/python3.8/dist-packages/keras/engine/input_spec.py", line 200, in assert_input_compatibility
        raise ValueError(f'Layer "{layer_name}" expects {len(input_spec)} input(s),'
    ValueError: Layer "sequential" expects 1 input(s), but it received 2 input tensors. Inputs received: [<tf.Tensor 'imgs:0' shape=(32,) dtype=int32>, <tf.Tensor 'imgs_1:0' shape=(32, 28, 28, 1) dtype=float32>]